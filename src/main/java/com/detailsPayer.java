/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import java.io.FileNotFoundException;
import classe.bd;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Mickele
 */
public class detailsPayer extends javax.swing.JFrame {

    /**
     * Creates new form detailsPayer
     */
    public detailsPayer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        im_text = new javax.swing.JLabel();
        im_or_num = new javax.swing.JLabel();
        im_text1 = new javax.swing.JLabel();
        nom_num = new javax.swing.JLabel();
        im_text2 = new javax.swing.JLabel();
        prenom_num = new javax.swing.JLabel();
        im_text3 = new javax.swing.JLabel();
        mois_num = new javax.swing.JLabel();
        im_text4 = new javax.swing.JLabel();
        annee_num = new javax.swing.JLabel();
        im_text5 = new javax.swing.JLabel();
        montant_num = new javax.swing.JLabel();
        pdf = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Details de payement");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(jLabel1)
                .addContainerGap(133, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        im_text.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        im_text.setText("IM :");

        im_or_num.setText("im");

        im_text1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        im_text1.setText("Nom :");

        nom_num.setText("nom");

        im_text2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        im_text2.setText("Prenoms :");

        prenom_num.setText("prenom");

        im_text3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        im_text3.setText("Mois :");

        mois_num.setText("mois");

        im_text4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        im_text4.setText("Ann√©e :");

        annee_num.setText("anne");

        im_text5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        im_text5.setText("Montant :");

        montant_num.setText("montant");

        pdf.setText("Generer le recu");
        pdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(im_text3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(mois_num, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(304, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(im_text2)
                                    .addGap(18, 18, 18)
                                    .addComponent(prenom_num, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(im_text1)
                                    .addGap(18, 18, 18)
                                    .addComponent(nom_num, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(im_text)
                                    .addGap(18, 18, 18)
                                    .addComponent(im_or_num, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addContainerGap(162, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(im_text5)
                                .addGap(18, 18, 18)
                                .addComponent(montant_num, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(im_text4)
                                .addGap(18, 18, 18)
                                .addComponent(annee_num, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pdf, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(im_text)
                    .addComponent(im_or_num))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(im_text1)
                    .addComponent(nom_num))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(im_text2)
                    .addComponent(prenom_num))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(im_text3)
                    .addComponent(mois_num))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(im_text4)
                    .addComponent(annee_num))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(im_text5)
                    .addComponent(montant_num))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(pdf)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfActionPerformed
    // G√©n√©rer le PDF
    LocalDateTime now = LocalDateTime.now();
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyyMMddHHmmss");
    String timestamp = now.format(formatter);
    String nomFichier = "hello-pdf-" + timestamp + ".pdf";
    try (Document document = new Document(new PdfDocument(new PdfWriter(nomFichier)))) {
        // Ajouter les donn√©es r√©cup√©r√©es dans le PDF
        document.add(new Paragraph("Recu de pension :"));
        document.add(new Paragraph("IM: " + im_or_num.getText()));
        document.add(new Paragraph("Nom: " + nom_num.getText()));
        document.add(new Paragraph("Pr√©nom: " + prenom_num.getText()));
        document.add(new Paragraph("Mois: " + mois_num.getText()));
        document.add(new Paragraph("Ann√©e: " + annee_num.getText()));
        document.add(new Paragraph("Montant: " + montant_num.getText()));
        JOptionPane.showMessageDialog(this, "Le PDF a √©t√© g√©n√©r√© avec succ√®s !", "Succ√®s", JOptionPane.INFORMATION_MESSAGE);
    } catch (FileNotFoundException ex) {
        Logger.getLogger(detailsPayer.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_pdfActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(detailsPayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(detailsPayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(detailsPayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(detailsPayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new detailsPayer().setVisible(true);
            }
        });
    }
    public void afficherDetailsPaiement(String IM, String num_tarif,Date payement) {
    Connection connection = bd.getConnection("jdbc:postgresql://localhost:5432/Java", "postgres", "madarauchiwa");
    
    // Requ√™te SQL pour r√©cup√©rer les informations de la personne
    String queryPersonne = "SELECT Nom, Prenoms, Statut, NomConjoint, PrenomConjoint FROM PERSONNE WHERE IM = ?";
    
    // Requ√™te SQL pour r√©cup√©rer le montant correspondant au num√©ro de tarif donn√©
    String queryMontant = "SELECT montant FROM TARIF WHERE num_tarif = ?";
    
    try {
        // Pr√©paration de la requ√™te pour r√©cup√©rer les informations de la personne
        PreparedStatement statementPersonne = connection.prepareStatement(queryPersonne);
        statementPersonne.setString(1, IM);
        
        // Ex√©cution de la requ√™te
        ResultSet resultSetPersonne = statementPersonne.executeQuery();
        if (resultSetPersonne.next()) {
            // R√©cup√©ration des informations de la personne
            String nom = resultSetPersonne.getString("Nom");
            String prenom = resultSetPersonne.getString("Prenoms");
            Boolean statut = resultSetPersonne.getBoolean("Statut");
            String nomConjoint = resultSetPersonne.getString("NomConjoint");
            String prenomConjoint = resultSetPersonne.getString("PrenomConjoint");
            
            // V√©rification du statut de la personne
            if (statut) {
                // Affichage des informations de la personne normalement
                nom_num.setText(nom);
                prenom_num.setText(prenom);
                im_or_num.setText(IM);
            } else {
                // Affichage des informations du conjoint en cas de d√©c√®s de la personne
                nom_num.setText(nomConjoint);
                prenom_num.setText(prenomConjoint);
                im_or_num.setText(IM); // Vous pouvez utiliser IM ou numPension du conjoint selon vos besoins
                
                // Requ√™te SQL pour r√©cup√©rer le num√©ro de pension du conjoint
                String queryPension = "SELECT numPension FROM CONJOINT WHERE NomConjoint = ? AND PrenomConjoint = ?";
                PreparedStatement statementPension = connection.prepareStatement(queryPension);
                statementPension.setString(1, nomConjoint);
                statementPension.setString(2, prenomConjoint);
                ResultSet resultSetPension = statementPension.executeQuery();
                if (resultSetPension.next()) {
                    String numPension = resultSetPension.getString("numPension");
                    im_or_num.setText(numPension);
                }
            }
        }
        
        // Pr√©paration de la requ√™te pour r√©cup√©rer le montant correspondant au num√©ro de tarif
        PreparedStatement statementMontant = connection.prepareStatement(queryMontant);
        statementMontant.setString(1, num_tarif);
        
        // Ex√©cution de la requ√™te
        ResultSet resultSetMontant = statementMontant.executeQuery();
        if (resultSetMontant.next()) {
            int montant = resultSetMontant.getInt("montant");
            Boolean statut = resultSetPersonne.getBoolean("Statut");
            montant_num.setText(String.valueOf(montant) + " Ar");
            if(statut){
                montant_num.setText(String.valueOf(montant) + " Ar");
            }else{
                montant = (int) (montant * 0.4);
                montant_num.setText(String.valueOf(montant) + " Ar");
            }
        }
        
        // Formatage de la date
        SimpleDateFormat dateFormat = new SimpleDateFormat("MMMM");
        String formattedDate = dateFormat.format(payement);
        SimpleDateFormat kk = new SimpleDateFormat("yyyy");
        String dateprime = kk.format(payement);
        
        // Affichage de la date
        mois_num.setText(formattedDate);
        annee_num.setText(dateprime);
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erreur lors de la r√©cup√©ration des donn√©es.", "Erreur", JOptionPane.ERROR_MESSAGE);
    }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel annee_num;
    private javax.swing.JLabel im_or_num;
    private javax.swing.JLabel im_text;
    private javax.swing.JLabel im_text1;
    private javax.swing.JLabel im_text2;
    private javax.swing.JLabel im_text3;
    private javax.swing.JLabel im_text4;
    private javax.swing.JLabel im_text5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel mois_num;
    private javax.swing.JLabel montant_num;
    private javax.swing.JLabel nom_num;
    private javax.swing.JButton pdf;
    private javax.swing.JLabel prenom_num;
    // End of variables declaration//GEN-END:variables
}
